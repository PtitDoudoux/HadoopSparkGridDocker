---
version : '3'

services:
  # Apache Hadoop configuration
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: hadoop-namenode
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=ws_5ibd_al_td
    env_file:
      - ./hadoop.env
    ports:
      - "50070:50070"
  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: hadoop-datanode1
    volumes:
      - datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075:50075"
  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: hadoop-datanode2
    volumes:
      - datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50080:50080"
  # Apache Hive configuration
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    restart: on-failure
    env_file:
      - ./hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    restart: on-failure
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    restart: on-failure
  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    restart: always
    ports:
      - "8080:9090"
  # Apache Spark configuration
  spark-master:
    image: bde2020/spark-master:2.4.0-hadoop2.7
    restart: on-failure
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
  spark-worker-1:
    image: bde2020/spark-worker:2.4.0-hadoop2.7
    restart: on-failure
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  spark-worker-2:
    image: bde2020/spark-worker:2.4.0-hadoop2.7
    restart: on-failure
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  # Cloudera Hue
  hue:
    image: bde2020/hdfs-filebrowser:3.11
    container_name: hue
    restart: on-failure
    ports:
      - "8088:8088"
    environment:
      - "NAMENODE_HOST=namenode"
  # Apache Zeppelin configuration
  zeppelin:
    image: openkbs/docker-spark-bde2020-zeppelin
    container_name: zeppelin
    restart: on-failure
    build:
      context: ./docker-spark-bde2020-zeppelin
      args:
        APACHE_SPARK_VERSION: 2.4.0 
        APACHE_HADOOP_VERSION: 2.7.4 
        SPARK_MASTER: "spark://spark-master:7077" 
        ZEPPELIN_DOWNLOAD_URL: http://apache.crihan.fr/dist/zeppelin
        ZEPPELIN_VERSION: 0.8.0 
        ZEPPELIN_PORT: 19090 
        ZEPPELIN_INSTALL_DIR: /usr/lib 
        ZEPPELIN_HOME: /usr/lib/zeppelin 
        ZEPPELIN_PKG_NAME: zeppelin-${ZEPPELIN_VERSION}-bin-all 
    container_name: zeppelin
    environment:
      CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
      SPARK_MASTER: "spark://spark-master:7077"
      MASTER: "spark://spark-master:7077"
      ZEPPELIN_PORT: 19090
      ZEPPELIN_JAVA_OPTS: >-
        -Dspark.driver.memory=1g
        -Dspark.executor.memory=2g
    ports:
      - 19090:19090
    env_file:
      - ./hadoop.env
    volumes:
      - zeppelin-data:/usr/lib/zeppelin/data:rw
      - zeppelin-notebook:/usr/lib/zeppelin/notebook:rw
    depends_on:
      - spark-master
      - namenode

volumes:
  namenode:
  datanode1:
  datanode2:
  zeppelin-data:
  zeppelin-notebook:
...
